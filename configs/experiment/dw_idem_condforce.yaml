# @package _global_

# to execute this experiment run:
# python train.py experiment=example

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters
defaults:
  - override /energy: dw_pseudo
  - override /model/noise_schedule: geometric

tags: ["DW", "iDEM", "condforce"]

seed: 12345

logger:
  wandb:
    tags: ${tags}
    group: "dw"

model:
  noise_schedule:
    _target_: dem.models.components.noise_schedules.GeometricNoiseSchedule
    sigma_min: 0.00001
    sigma_max: 1.0

  buffer:
    prioritize: false

  partial_prior:
    _target_: dem.energies.base_prior.Prior
    _partial_: true
    dim: 2

  clipper:
    _target_: dem.models.components.clipper.Clipper
    should_clip_scores: True
    should_clip_log_rewards: False
    max_score_norm: 70
    min_log_reward: null

  lambda_weighter:
    _target_: dem.models.components.lambda_weighter.BasicLambdaWeighter
    _partial_: true
    epsilon: 1e-3

  optimizer:
    lr: 5e-4

  diffusion_scale: 1.0

  num_estimator_mc_samples: 500
  num_samples_to_generate_per_epoch: 1000

  # this has to be max 1000 since test_set is 1000
  eval_batch_size: 1000
  scheduler: null

trainer:
  max_epochs: 100

energy:
  # Pseudo-energy specific parameters
  energy_weight: 0.0
  force_weight: 1.0
  forces_norm: null # None=2, 1, or inf
  force_exponent: 1
  force_exponent_eps: 0
  force_activation: null
  force_scale: 1.0
  hessian_weight: 1.0
  hessian_eigenvalue_penalty: null
  hessian_scale: 10.0
  term_aggr: 'cond_force'
  temperature: 1.0
  gad_offset: -10.0
  clamp_min: -100000.0
  clamp_max: null

